{"ast":null,"code":"var _jsxFileName = \"E:\\\\ChessGame\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Square from \"./Components/Square\";\nimport \"./App.css\";\nimport BoardRow from \"./Components/BoardRow\";\nimport { calculateWinner } from \"./utils/util\";\nimport Game from \"./Components/Game\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [values, setValues] = React.useState(Array(9).fill(\"\"));\n  const [isXNext, setXNext] = React.useState(true);\n  const winner = calculateWinner(values);\n  let status = \"\";\n  if (winner) {\n    status = `Winner: ${winner}`;\n  } else {\n    status = `Next player: ${isXNext ? \"X\" : \"O\"}`;\n  }\n  const clickHandler = (e, posX, posY) => {\n    if (values[3 * posX + posY] || calculateWinner(values)) return;\n    setValues(prevValues => {\n      if (isXNext) {\n        prevValues[3 * posX + posY] = \"X\";\n      } else {\n        prevValues[3 * posX + posY] = \"O\";\n      }\n      setXNext(!isXNext);\n      return [...prevValues];\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Game, {\n      onSquareClick: clickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"0I8oDWS6Vl9Nyjw1R/TCJRHH58I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Square","BoardRow","calculateWinner","Game","jsxDEV","_jsxDEV","App","_s","values","setValues","useState","Array","fill","isXNext","setXNext","winner","status","clickHandler","e","posX","posY","prevValues","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSquareClick","_c","$RefreshReg$"],"sources":["E:/ChessGame/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport Square from \"./Components/Square\";\r\nimport \"./App.css\";\r\nimport BoardRow from \"./Components/BoardRow\";\r\nimport {calculateWinner} from \"./utils/util\";\r\nimport Game from \"./Components/Game\";\r\n\r\nconst App = () => {\r\n\r\n    const [values, setValues] = React.useState(Array(9).fill(\"\"));\r\n    const [isXNext, setXNext] = React.useState(true);\r\n    const winner = calculateWinner(values);\r\n    let status = \"\";\r\n    if(winner){\r\n        status = `Winner: ${winner}`;\r\n    }else {\r\n        status = `Next player: ${isXNext ? \"X\" : \"O\"}`;\r\n    }\r\n\r\n\r\n    const clickHandler = (e, posX, posY) => {\r\n        if(values[3 * posX + posY] || calculateWinner(values)) return;\r\n        setValues((prevValues) => {\r\n            if(isXNext){\r\n                prevValues[3 * posX + posY] = \"X\";\r\n            }else {\r\n                prevValues[3 * posX + posY] = \"O\";\r\n            }\r\n            setXNext(!isXNext);\r\n            return [...prevValues];\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <div className={\"status\"}>\r\n                <label>{status}</label>\r\n            </div>\r\n            <Game onSquareClick={clickHandler} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAAQC,eAAe,QAAO,cAAc;AAC5C,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;EAC7D,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGf,KAAK,CAACW,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMK,MAAM,GAAGb,eAAe,CAACM,MAAM,CAAC;EACtC,IAAIQ,MAAM,GAAG,EAAE;EACf,IAAGD,MAAM,EAAC;IACNC,MAAM,GAAG,WAAWD,MAAM,EAAE;EAChC,CAAC,MAAK;IACFC,MAAM,GAAG,gBAAgBH,OAAO,GAAG,GAAG,GAAG,GAAG,EAAE;EAClD;EAGA,MAAMI,YAAY,GAAGA,CAACC,CAAC,EAAEC,IAAI,EAAEC,IAAI,KAAK;IACpC,IAAGZ,MAAM,CAAC,CAAC,GAAGW,IAAI,GAAGC,IAAI,CAAC,IAAIlB,eAAe,CAACM,MAAM,CAAC,EAAE;IACvDC,SAAS,CAAEY,UAAU,IAAK;MACtB,IAAGR,OAAO,EAAC;QACPQ,UAAU,CAAC,CAAC,GAAGF,IAAI,GAAGC,IAAI,CAAC,GAAG,GAAG;MACrC,CAAC,MAAK;QACFC,UAAU,CAAC,CAAC,GAAGF,IAAI,GAAGC,IAAI,CAAC,GAAG,GAAG;MACrC;MACAN,QAAQ,CAAC,CAACD,OAAO,CAAC;MAClB,OAAO,CAAC,GAAGQ,UAAU,CAAC;IAC1B,CAAC,CAAC;EACN,CAAC;EAED,oBACIhB,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBlB,OAAA;MAAKiB,SAAS,EAAE,QAAS;MAAAC,QAAA,eACrBlB,OAAA;QAAAkB,QAAA,EAAQP;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACNtB,OAAA,CAACF,IAAI;MAACyB,aAAa,EAAEX;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEd,CAAC;AAACpB,EAAA,CAlCID,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAoCT,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}